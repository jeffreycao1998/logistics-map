[{"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\App.tsx":"1","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\index.tsx":"2","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\components\\Map.tsx":"3","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\util\\constants.ts":"4","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\hooks\\useInput.tsx":"5","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\graphql\\gql.ts":"6","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\util\\calcViewport.ts":"7","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\graphql\\queries\\getRoutes.ts":"8","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\components\\Sidebar.tsx":"9","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\components\\WaypointMarker.tsx":"10","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\globalstyles.ts":"11","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\components\\Modals\\CreateShipmentModal.tsx":"12","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\components\\Modals\\EditShipmentModal.tsx":"13","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\graphql\\mutations\\createShipment.ts":"14","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\graphql\\mutations\\deleteShipment.ts":"15","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\components\\Modals\\DeleteShipmentModal.tsx":"16","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\graphql\\mutations\\editShipment.ts":"17"},{"size":1061,"mtime":1610914090042,"results":"18","hashOfConfig":"19"},{"size":511,"mtime":1610914677926,"results":"20","hashOfConfig":"19"},{"size":4632,"mtime":1611022235446,"results":"21","hashOfConfig":"19"},{"size":214,"mtime":1610809429988,"results":"22","hashOfConfig":"19"},{"size":1533,"mtime":1610995586584,"results":"23","hashOfConfig":"19"},{"size":366,"mtime":1610930707258,"results":"24","hashOfConfig":"19"},{"size":1146,"mtime":1610896037894,"results":"25","hashOfConfig":"19"},{"size":345,"mtime":1610897995362,"results":"26","hashOfConfig":"19"},{"size":7671,"mtime":1610996219293,"results":"27","hashOfConfig":"19"},{"size":548,"mtime":1610914044873,"results":"28","hashOfConfig":"19"},{"size":739,"mtime":1610915017511,"results":"29","hashOfConfig":"19"},{"size":4959,"mtime":1611015288853,"results":"30","hashOfConfig":"19"},{"size":4832,"mtime":1610995699315,"results":"31","hashOfConfig":"19"},{"size":551,"mtime":1610920788254,"results":"32","hashOfConfig":"19"},{"size":429,"mtime":1610921955623,"results":"33","hashOfConfig":"19"},{"size":3337,"mtime":1610930755198,"results":"34","hashOfConfig":"19"},{"size":594,"mtime":1610932011111,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"b4jpc5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\App.tsx",[],["73","74"],"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\index.tsx",[],"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\components\\Map.tsx",[],"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\util\\constants.ts",[],"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\hooks\\useInput.tsx",[],"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\graphql\\gql.ts",[],"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\util\\calcViewport.ts",[],"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\graphql\\queries\\getRoutes.ts",[],"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\components\\Sidebar.tsx",["75","76"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ShipmentType, RouteType } from '../types';\r\n\r\n// components\r\nimport EditShipmentModal from './Modals/EditShipmentModal';\r\nimport CreateShipmentModal from './Modals/CreateShipmentModal';\r\nimport DeleteShipmentModal from './Modals/DeleteShipmentModal';\r\n\r\nconst Container = styled.div`\r\n  width: 400px;\r\n  height: 100vh;\r\n  border-left: 1px solid grey;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  height: 52px;\r\n  border-bottom: 1px solid lightgrey;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  padding: 0 16px;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 52px);\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst WaypointContainer = styled.div`\r\n  margin: 16px;\r\n  background-color: white;\r\n  padding: 16px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 7px 10px -5px rgba(150,170,180,0.5);\r\n\r\n  .title {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  .bottom-spacing {\r\n    margin-bottom: 24px;\r\n  }\r\n\r\n  .info {\r\n    .header {\r\n      display: flex;\r\n      align-items: center;\r\n      position: relative;\r\n\r\n      .title {\r\n        margin-right: 8px;\r\n      }\r\n\r\n      .indicator {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        border: 1px solid black;\r\n        border-radius: 50%;\r\n        width: 25px;\r\n        height: 25px;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    .actions {\r\n      display: flex;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Actions = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  display: none;\r\n`;\r\n\r\ntype ActionBtnProps = {\r\n  color: 'blue' | 'red' | 'green'\r\n}\r\n\r\nconst ActionBtn = styled.div`\r\n  padding: 6px 10px;\r\n  color: white;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  user-select: none;\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n\r\n  ${({color}: ActionBtnProps) => {\r\n    if (color === 'blue') {\r\n      return `\r\n        background-color: #188bb1;\r\n      `;\r\n    }\r\n    if (color === 'red') {\r\n      return `\r\n        background-color: #da3a2f;\r\n      `;\r\n    }\r\n    if (color === 'green') {\r\n      return `\r\n        background-color: #028102;\r\n      `;\r\n    }\r\n  }}\r\n\r\n  ion-icon {\r\n    color: white;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  shipments: Array<ShipmentType>\r\n  setShipments: React.Dispatch<React.SetStateAction<Array<ShipmentType>>>\r\n  setRoutes: React.Dispatch<React.SetStateAction<Array<RouteType>>>\r\n}\r\n\r\nconst Sidebar = ({ shipments, setShipments, setRoutes }: Props) => {\r\n  const [selectedId, setSelectedId] = useState('');\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  const [selectedShipmentId, setSelectedShipmentId] = useState('');\r\n  const [selectedPickupLocation, setSelectedPickupLocation] = useState([] as Array<number>);\r\n  const [selectedDropoffLocation, setSelectedDropoffLocation] = useState([] as Array<number>);\r\n  const [selectedDescription, setSelectedDescription] = useState('');\r\n\r\n  const setSelectedShipment = (shipmentId: string, pickupLocation: Array<number>, dropoffLocation: Array<number>, description: string) => {\r\n    setSelectedShipmentId(shipmentId);\r\n    setSelectedPickupLocation([...pickupLocation]);\r\n    setSelectedDropoffLocation([...dropoffLocation]);\r\n    setSelectedDescription(description);\r\n  };\r\n\r\n  // const resetSelectedShipment = () => {\r\n  //   setSelectedShipmentId('');\r\n  //   setSelectedPickupLocation([] as Array<number>);\r\n  //   setSelectedDropoffLocation([] as Array<number>);\r\n  //   setSelectedDescription('');\r\n  // };\r\n  \r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <ActionBtn color='green' onClick={() => setShowCreateModal(true)}>\r\n          {/* @ts-ignore */}\r\n          <ion-icon name=\"duplicate-outline\"></ion-icon>\r\n          Create\r\n        </ActionBtn>\r\n      </Header>\r\n      <ContentContainer>\r\n        {\r\n          shipments.length > 0 && shipments.map(({ id, pickupLocation, dropoffLocation, description }: ShipmentType) => {\r\n            return (\r\n              <WaypointContainer key={id}>\r\n                <div className='info pickup bottom-spacing'>\r\n                  <div className='header'>\r\n                    <h4 className='title'>Pickup</h4>\r\n                    <h4 className='indicator'>{`${pickupLocation[2] === undefined ? 1 : pickupLocation[2] + 2}`}</h4>\r\n                    <Actions className='actions'>\r\n                      <ActionBtn color='red' onClick={() => {\r\n                          setShowDeleteModal(true)\r\n                          setSelectedShipment(id, pickupLocation, dropoffLocation, description);\r\n                        }}>\r\n                        {/* @ts-ignore */}\r\n                        <ion-icon name=\"trash-outline\"></ion-icon>\r\n                      </ActionBtn>\r\n                      <ActionBtn color='blue' onClick={() => {\r\n                          setShowEditModal(true);\r\n                          setSelectedShipment(id, pickupLocation, dropoffLocation, description);\r\n                        }}>\r\n                        {/* @ts-ignore */}\r\n                        <ion-icon name=\"create-outline\"></ion-icon>\r\n                      </ActionBtn>\r\n                    </Actions>\r\n                  </div>\r\n                  <p>{`[${ pickupLocation[0] }, ${ pickupLocation[1] }]`}</p>\r\n                </div>\r\n                <div className='info dropoff bottom-spacing'>\r\n                  <div className='header'>\r\n                    <h4 className='title'>Dropoff</h4>\r\n                    <h4 className='indicator'>{`${dropoffLocation[2] === undefined ? 1 : dropoffLocation[2] + 2}`}</h4>                </div>\r\n                  <p>{`[${ dropoffLocation[0] }, ${ dropoffLocation[1] }]`}</p>\r\n                </div>\r\n                <div className='info description'>\r\n                  <h4 className='title'>Description</h4>\r\n                  <p>{ description }</p>\r\n                </div>\r\n              </WaypointContainer>\r\n            )\r\n          })\r\n        }\r\n        {\r\n          showCreateModal &&\r\n          <CreateShipmentModal\r\n            setShowModal={setShowCreateModal}\r\n            shipments={shipments}\r\n            setShipments={setShipments}\r\n            setRoutes={setRoutes}\r\n          />\r\n        }\r\n        {\r\n          showEditModal &&\r\n          <EditShipmentModal\r\n            shipmentId={selectedId}\r\n            setShowModal={setShowEditModal}\r\n            initPickupLng={selectedPickupLocation[0].toString()}\r\n            initPickupLat={selectedPickupLocation[1].toString()}\r\n            initDropoffLng={selectedDropoffLocation[0].toString()}\r\n            initDropoffLat={selectedDropoffLocation[1].toString()}\r\n            initDescription={selectedDescription}\r\n            setShipments={setShipments}\r\n            setRoutes={setRoutes}\r\n          />\r\n        }\r\n        {\r\n          showDeleteModal &&\r\n          <DeleteShipmentModal\r\n            shipmentId={selectedId}\r\n            setShowModal={setShowDeleteModal}\r\n            initPickupLng={selectedPickupLocation[0].toString()}\r\n            initPickupLat={selectedPickupLocation[1].toString()}\r\n            initDropoffLng={selectedDropoffLocation[0].toString()}\r\n            initDropoffLat={selectedDropoffLocation[1].toString()}\r\n            initDescription={selectedDescription}\r\n            setShipments={setShipments}\r\n            setRoutes={setRoutes}\r\n          />\r\n        }\r\n      </ContentContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\components\\WaypointMarker.tsx",[],"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\globalstyles.ts",[],"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\components\\Modals\\CreateShipmentModal.tsx",[],"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\components\\Modals\\EditShipmentModal.tsx",[],"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\graphql\\mutations\\createShipment.ts",[],"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\graphql\\mutations\\deleteShipment.ts",[],"C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\components\\Modals\\DeleteShipmentModal.tsx",["77"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMutation } from '@apollo/client';\r\nimport { DELETE_SHIPMENT } from '../../graphql/gql';\r\nimport { RouteType, ShipmentType } from '../../types';\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nconst DarkOverlay = styled.div`\r\n  background-color: rgba(0,0,0,0.3);\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  min-width: 400px;\r\n  min-height: 400px;\r\n  padding: 16px;\r\n`;\r\n\r\nconst CloseContainer = styled.div`\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 12px;\r\n  padding: 4px;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n\r\n  ion-icon {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Section = styled.div`\r\n  padding: 16px;\r\n  width: 100%;\r\n\r\n  .title {\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  .cols-2 {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n\r\n    > * {\r\n      width: 48%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DeleteBtn = styled.div`\r\n  margin: 32px 32px 16px 32px;\r\n  width: 336x;\r\n  text-align: center;\r\n  padding: 16px;\r\n  border: 1px solid grey;\r\n  background-color: green;\r\n  color: white;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n  border-radius: 4px;\r\n  user-select: none;\r\n\r\n  :hover {\r\n    background-color: #017001;\r\n  }\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Message = styled.p`\r\n  margin-left: 32px;\r\n  color: #ff0033;\r\n  font-weight: 500;\r\n`;\r\n\r\ntype Props = {\r\n  shipmentId: string\r\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>\r\n  initPickupLng: string\r\n  initPickupLat: string\r\n  initDropoffLng: string\r\n  initDropoffLat: string\r\n  initDescription: string\r\n  setShipments: React.Dispatch<React.SetStateAction<Array<ShipmentType>>>\r\n  setRoutes: React.Dispatch<React.SetStateAction<Array<RouteType>>>\r\n}\r\n\r\nconst DeleteShipmentModal = ({ \r\n  shipmentId,\r\n  setShowModal,\r\n  initPickupLng,\r\n  initPickupLat,\r\n  initDropoffLng,\r\n  initDropoffLat,\r\n  initDescription,\r\n  setShipments,\r\n  setRoutes,\r\n}: Props) => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const [deleteShipment] = useMutation(DELETE_SHIPMENT);\r\n\r\n  const handleDelete = () => {\r\n    deleteShipment({ variables: { shipmentId }})\r\n    .then(res => {\r\n      const { shipments, routes } = res.data.deleteShipment;\r\n      setShipments([...shipments]);\r\n      setRoutes([...routes]);\r\n      setShowModal(false);\r\n    })\r\n    .catch(err => {\r\n      setMessage(err.message);\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <Container>\r\n      <DarkOverlay onClick={() => setShowModal(false)}/>\r\n      <ContentContainer>\r\n        <CloseContainer onClick={() => setShowModal(false)}>\r\n          {/* @ts-ignore */}\r\n          <ion-icon name=\"close\"></ion-icon>\r\n        </CloseContainer>\r\n\r\n        <Content>\r\n          <h4>Delete shipment - {shipmentId.slice(9)}</h4>\r\n\r\n          <DeleteBtn onClick={handleDelete}>DELETE</DeleteBtn>\r\n\r\n          <Message>{ message }</Message>\r\n        </Content>\r\n      </ContentContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DeleteShipmentModal;","C:\\Users\\Jeffrey\\Desktop\\Code\\assignments\\logistics-map\\client\\src\\graphql\\mutations\\editShipment.ts",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":131,"column":22,"nodeType":"84","messageId":"85","endLine":131,"endColumn":35},{"ruleId":"82","severity":1,"message":"86","line":136,"column":10,"nodeType":"84","messageId":"85","endLine":136,"endColumn":28},{"ruleId":"82","severity":1,"message":"87","line":54,"column":7,"nodeType":"84","messageId":"85","endLine":54,"endColumn":14},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"@typescript-eslint/no-unused-vars","'setSelectedId' is assigned a value but never used.","Identifier","unusedVar","'selectedShipmentId' is assigned a value but never used.","'Section' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]